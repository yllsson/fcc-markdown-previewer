{"version":3,"sources":["components/Header.js","components/Editor.js","components/Preview.js","App.js","index.js"],"names":["Header","className","Editor","editValue","setEditValue","id","value","onChange","e","target","Preview","marked","dangerouslySetInnerHTML","__html","App","require","setOptions","breaks","gfm","useState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAQeA,EARA,WACb,OACE,qBAAKC,UAAU,SAAf,SACE,sECUSC,EAbA,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC3B,OACE,0BACEH,UAAU,gBACVI,GAAG,SACHC,MAAOH,EACPI,SAAU,SAAAC,GACRJ,EAAaI,EAAEC,OAAOH,WCGfI,EAVC,SAAC,GAA2B,IAAzBP,EAAwB,EAAxBA,UAAWQ,EAAa,EAAbA,OAC5B,OACE,qBACEV,UAAU,iBACVI,GAAG,UACHO,wBAAyB,CAAEC,OAAQF,EAAOR,OCoGjCW,MA/Ff,WACE,IAAMH,EAASI,EAAQ,IACvBJ,EAAOK,WAAW,CAChBC,QAAQ,EACRC,KAAK,IAGP,IAPa,EA8EqBC,mBAvEjB,ywDAPJ,mBA8ENhB,EA9EM,KA8EKC,EA9EL,KAgFb,OACE,sBAAKH,UAAU,MAAf,UACE,cAAC,EAAD,IACA,uBAAMA,UAAU,YAAhB,UACE,cAAC,EAAD,CACEU,OAAQA,EACRR,UAAWA,EACXC,aAAcA,IAEhB,cAAC,EAAD,CAASO,OAAQA,EAAQR,UAAWA,W,MC9F5CiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fdc8fbf1.chunk.js","sourcesContent":["const Header = () => {\r\n  return (\r\n    <div className='header'>\r\n      <h1>Welcome to my Markdown Previewer!</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const Editor = ({ editValue, setEditValue }) => {\r\n  return (\r\n    <textarea\r\n      className='window editor'\r\n      id='editor'\r\n      value={editValue}\r\n      onChange={e => {\r\n        setEditValue(e.target.value);\r\n      }}\r\n    ></textarea>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","const Preview = ({ editValue, marked }) => {\r\n  return (\r\n    <div\r\n      className='window preview'\r\n      id='preview'\r\n      dangerouslySetInnerHTML={{ __html: marked(editValue) }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","// the Marked library: https://cdnjs.com/libraries/marked).\r\n\r\n// fcc stories still to be fulfilled\r\n// Optional Bonus (you do not need to make this test pass): My markdown previewer interprets carriage returns and renders them as br (line break) elements.\r\n\r\nimport React, { useState } from 'react';\r\nimport Header from './components/Header';\r\nimport Editor from './components/Editor';\r\nimport Preview from './components/Preview';\r\n\r\nfunction App() {\r\n  const marked = require('marked');\r\n  marked.setOptions({\r\n    breaks: true,\r\n    gfm: true\r\n  });\r\n\r\n  const initialText = `\r\n##### *Write your markdown in the editor to the left and it'll show up in the previewer on the right!*\r\n\r\n<br>\r\n\r\nHere are some of the things you can do:\r\n=====\r\n<br>\r\n\r\n## Create a header\r\nThe hash symbols create headers according to the amount of hash symbols added:\r\n# H1 \r\n## H2 \r\n### H3 \r\n#### H4\r\n##### H5\r\n###### H6 is the max\r\n<br>\r\n\r\n## Add a link\r\n\r\nYou add your [text within the brackets](https://google.com/) and your url within the parentheses. \r\nThis particular one leads to google. :)\r\n<br>\r\n\r\n## Add an image\r\nUse an exclamation mark, followed by your alt text wrapped in brackets, followed by the link to your image wrapped in parentheses!\r\n![\"A waving polar bear\"](https://images.unsplash.com/photo-1589656966895-2f33e7653819?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80)\r\n<br>\r\n\r\n## Add inline code\r\nPut the code within backticks: \\`console.log(\"Hello World\")\\` \r\n<br>\r\n\r\n## Add a full block of code\r\nIf you want a full block of code you use 3 backticks before and after your block.\r\n\\`\\`\\`\r\nvar text = \"Hello World!\"\r\nconsole.log(text)\r\n\\`\\`\\`\r\n<br>\r\n\r\n## Create lists! \r\nAn unordered list is made with simple hyphens in front of each list item\r\n- a list item\r\n- another list item\r\n- a third list item\r\n\r\n<br>\r\n\r\nWhile an ordered list is created by writing numbers\r\n1. a list item\r\n2. another list item\r\n3. a third list item\r\n\r\n<br>\r\n\r\n## Add a blockquote \r\n> A blockquote is created using \"greater than\" signs at the start of your sentence!\r\n> Here's another line of the quote\r\n> ... It's not a very lengthy quote...\r\n\r\n<br>\r\n\r\n## And last but not least\r\nYou add *cursive text* using one asterisk on each side of the selection and **bolded text** using two asterisks.\r\n<br>\r\n\r\n## Now it's your turn! Go on - give it a go!\r\n`;\r\n\r\n  const [editValue, setEditValue] = useState(initialText);\r\n\r\n  return (\r\n    <div className='App'>\r\n      <Header />\r\n      <main className='container'>\r\n        <Editor\r\n          marked={marked}\r\n          editValue={editValue}\r\n          setEditValue={setEditValue}\r\n        />\r\n        <Preview marked={marked} editValue={editValue} />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './css/style.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}